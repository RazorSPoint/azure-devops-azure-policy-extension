resources:
- repo: self


trigger:
  batch: true
  branches:
    include: [ master ]
  paths:
    exclude:
    - README.md
    - tools
    - BuildPreparation.ps1
    - docs

pr:
  autoCancel: true
  branches:
    include:
    - master
  paths:
    exclude:
    - README.md
    - tools
    - BuildPreparation.ps1
    - docs

pool:
  vmImage: windows-latest

variables:
  outputDir: './dist'
  sourcePath: './src'
  PublisherName: 'RazorSPoint'
  ExtensionId: '6524a597-31bc-44fc-895d-0e9ba50f2493'
  SharedWith: 'razorspoint-trashdummy,razorspoint'


stages:
- stage: Build
  jobs:
  - job: Build_Extension
    displayName: 'Build Extension'
    steps:
    - task: GitVersion@5
      displayName: GitVersion
      inputs:
        runtime: 'core'

    - template: YamlTemplates/unitTests.yml
      parameters:
        CodeCoverage: 'true'

    - pwsh: '$(Build.SourcesDirectory)/tools/PrepareExtension.ps1 -sourcePath $(sourcePath) -outputDir $(outputDir) -generateChangeLog'
      displayName: 'Merge Extension Files for Build'

    - template: YamlTemplates/codeAnalysis.yml

    - pwsh: "Tree $(outputDir) /f"
      condition: always()

    - task: TfxInstaller@2
      inputs:
        version: 'v0.7.x'

    - task: PackageVSTSExtension@1
      displayName: 'Package Extension'
      inputs:
        rootFolder: $(outputDir)
        outputPath: '$(Build.ArtifactStagingDirectory)/package/'
        extensionVersion: '$(GitVersion.Major).$(GitVersion.Minor).$(GitVersion.Patch)'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: AzurepolicyTasks'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/package/'

        ArtifactName: AzurepolicyTasks


- stage: Staging
  jobs:
  - deployment: Test_Release
    displayName: 'Test Release'
    environment: Staging
    strategy:
      runOnce:
        deploy:        
          steps:
          - checkout: self 

          - task: GitVersion@5
            displayName: GitVersion
            inputs:
              runtime: 'core'

          - task: ms-devlabs.vsts-developer-tools-build-tasks.tfx-installer-build-task.TfxInstaller@2
            displayName: 'Install tfx-cli: v0.7.x'
            inputs:
              version: v0.7.x

          - task: ms-devlabs.vsts-developer-tools-build-tasks.publish-extension-build-task.PublishAzureDevOpsExtension@2
            displayName: 'Publish Extension'
            inputs:
              connectedServiceName: 'Marketplace Connection'
              fileType: vsix
              vsixFile: '$(Build.StagingDirectory)/../AzurepolicyTasks/*.vsix'
              publisherId: '$(PublisherName)'
              extensionId: '$(ExtensionId)'
              extensionTag: Preview
              extensionVersion: '$(GitVersion.Major).$(GitVersion.Minor).$(GitVersion.CommitsSinceVersionSource)'
              updateTasksId: true
              extensionVisibility: privatepreview
              extensionPricing: free
              shareWith: '$(SharedWith)'

- stage: Production
  jobs:
  - deployment: Public_Release
    displayName: 'Public Release'
    environment: Production
    strategy:
      runOnce:
        deploy:        
          steps:
          - checkout: self 
          - task: GitVersion@5
            displayName: GitVersion
            inputs:
              runtime: 'core'

          - task: ms-devlabs.vsts-developer-tools-build-tasks.tfx-installer-build-task.TfxInstaller@2
            displayName: 'Install tfx-cli: v0.7.x'
            inputs:
              version: v0.7.x

          - task: ms-devlabs.vsts-developer-tools-build-tasks.publish-extension-build-task.PublishAzureDevOpsExtension@2
            displayName: 'Publish Extension '
            inputs:
              connectedServiceName: 'Marketplace Connection'
              fileType: vsix
              vsixFile: '$(Build.StagingDirectory)/../AzurePolicies/AzurepolicyTasks/*.vsix'
              publisherId: '$(PublisherName)'
              updateTasksVersion: false

